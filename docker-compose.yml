version: '3'

services:
  frontend:
    build:
      context: ./frontend  
    image: darkam/t-poo-700-mar_9-frontend  # Ajout de l'image
    ports:
      - "8080:8080"  
    networks:
      - app-network

  api_time_manager:
    build:
      context: ./api_time_manager  
    image: darkam/t-poo-700-mar_9-api_time_manager  # Ajout de l'image
    environment:
      PG_USER: postgres
      PG_PWD: postgres
      PG_DB: timemanager_dev
      PG_HOST: db
      PHX_SERVER: true
    ports:
      - "4000:4000"  
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:alpine 
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: timemanager_dev
    ports:
      - "5432:5432"  
    networks:
      - app-network
    volumes:
      - api_time_manager_pgdata:/var/lib/postgresql/data  
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  api_time_manager_pgdata:
